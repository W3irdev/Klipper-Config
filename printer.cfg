# MKS Gen l V1

[mcu]
serial:/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0
baud:250000

[include mainsail.cfg]

[stepper_x]
step_pin: PF0
dir_pin: PF1
enable_pin: !PD7
microsteps: 16
rotation_distance: 40   ##rotation_distance = ((360°/1.8°) * microsteps) / 80 # # 旋转距离 = （圆周360°/步距角）*细分/每MM脉冲值
endstop_pin: ^!PE5 #^PE5 X-Min, PE4:X-Max
position_endstop: 0
position_max: 300
homing_speed: 30

[stepper_y]
step_pin: PF6
dir_pin: !PF7
enable_pin: !PF2
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PJ1  #^PJ1 Y-Min, PJ0:Y-Max
position_endstop: 300
position_max: 300
homing_speed: 30

[stepper_z]
step_pin: PL3
dir_pin: !PL1
enable_pin: !PK0
microsteps: 16
rotation_distance: 8
#endstop_pin: ^PD3  #Z-Min, PD2:Z-Max
endstop_pin: probe:z_virtual_endstop
#position_endstop: 0
position_max: 250
position_min: -3

[extruder]
step_pin: PA4
dir_pin: PA6
enable_pin: !PA2
gear_ratio: 50:17
microsteps: 16
rotation_distance: 22.172 #33.500
nozzle_diameter: 0.4
filament_diameter: 1.750
heater_pin: PB4
sensor_type: ATC Semitec 104GT-2
sensor_pin: PK5
min_temp: 0
max_temp: 265
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114

#[extruder1]
#step_pin: PC1
#dir_pin: !PC3
#enable_pin: !PC7
#heater_pin: PH4
#sensor_pin: PK7
#...

[heater_bed]
heater_pin: PH5
sensor_type: ATC Semitec 104GT-2
sensor_pin: PK6
min_temp: 0
max_temp: 130
control: pid
pid_Kp: 325.10
pid_Ki: 63.35
pid_Kd: 417.10

[fan]
pin: PH6

[heater_fan e3d_heatsink_board]
pin: PH4
heater: extruder
heater_temp: 50.0
max_power: 1.0
fan_speed: 1
kick_start_time: 0
shutdown_speed: 1

[display_status]

########################################
# TMC UART configuration
########################################

#[tmc2209 stepper_x]
#uart_pin: PK1
#interpolate: True
#run_current: 0.8
#hold_current: 0.5
#sense_resistor: 0.110
#stealthchop_threshold: 999999
#diag_pin: ^PE5      # Set to MCU pin connected to TMC DIAG pin
#driver_SGTHRS: 60   # 255 is most sensitive value, 0 is least sensitiv      # Set to MCU pin connected to TMC DIAG pin


#[tmc2209 stepper_y]
#uart_pin: PK2
#interpolate: True
#run_current: 0.8
#hold_current: 0.5
#sense_resistor: 0.110
#stealthchop_threshold: 999999
#diag_pin: ^PJ1      # Set to MCU pin connected to TMC DIAG pin
#driver_SGTHRS: 60  # 255 is most sensitive value, 0 is least sensitiv

#[tmc2209 stepper_z]
#uart_pin: PK3
#interpolate: True
#run_current: 0.8
#hold_current: 0.5
#sense_resistor: 0.110
#stealthchop_threshold: 999999
#diag_pin: ^PD2     # Set to MCU pin connected to TMC DIAG pin
#driver_SGTHRS: 255  # 255 is most sensitive value, 0 is least sensitiv

#[tmc2209 extruder]
#uart_pin: PK4
#interpolate: True
#run_current: 0.8
#hold_current: 0.5
#sense_resistor: 0.110
#stealthchop_threshold: 999999

#[tmc2209 stepper_e1]
#uart_pin: PB6
##interpolate: True
#run_current: 0.8
#hold_current: 0.5
#sense_resistor: 0.110
#stealthchop_threshold: 0


[printer]
kinematics: cartesian
max_velocity: 200
max_accel: 1500
max_z_velocity: 9
max_z_accel: 400
square_corner_velocity: 10.0

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100


########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PC0, EXP1_3=PH0, EXP1_5=PA1, EXP1_7=PA5, EXP1_9=<GND>,
    EXP1_2=PC2, EXP1_4=PH1, EXP1_6=PA3, EXP1_8=PA7, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PB3, EXP2_3=PC6, EXP2_5=PC4, EXP2_7=PL0,  EXP2_9=<GND>,
    EXP2_2=PB1, EXP2_4=PB0, EXP2_6=PB2, EXP2_8=PG0, EXP2_10=<NC>
    # Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "ssp1"
# See the MKS Lcd Config path file for definitions of common LCD displays.
[include mks_lcd_12864.cfg]

[virtual_sdcard]
path: /home/pi/printer_data/gcodes

[pause_resume]

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE


[display_status]

[bltouch]
sensor_pin: ^PD3 #^PD2
control_pin:PB5
x_offset: -47.40
y_offset: -2
#z_offset: 0
speed: 10.0
samples: 2
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.1
samples_tolerance_retries: 1

[safe_z_home]
home_xy_position: 150,150 # Change coordinates to the center of your print bed
speed: 50
z_hop: 10                 # Move up 10mm
z_hop_speed: 5


[gcode_macro G29]
gcode:
    BED_MESH_CLEAR
    G28
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE SAVE=name
    SAVE_CONFIG
    BED_MESH_PROFILE LOAD=name

[bed_mesh]
speed: 50
horizontal_move_z: 10
mesh_min:20,20
mesh_max:252,270
probe_count: 6,6

########################################
# MACROS
########################################

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # Start bed heating
    M140 S{BED_TEMP}
    # Use absolute coordinates
    G90
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=0.0
    # Home the printer
    G28
    # Move the nozzle near the bed
    G1 Z5 F3000
    # Move the nozzle very close to the bed
    G1 Z0.15 F300
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}

[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    # Disable steppers
    M84


[gcode_macro UNLOAD_FILAMENT]
description: Unloads Filament from extruder
gcode:
  {% if printer.extruder.temperature < 180 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=UNLOAD_state
    {% set Z = params.Z|default(50)|int %}
    {% set axis_max = printer.toolhead.axis_maximum %}
    {% set pos = printer.toolhead.position %}
 
    {% set z_diff = axis_max.z - pos.z %}
    {% set z_safe_lift = [ Z, z_diff ] | min%}
 
    G91                   # relative positioning
    G0 Z{ z_safe_lift }
    # Reset extruder position
    G92 E0
    G1 E5.0 F300        # extrude a little
    G1 E-50 F{ 10 * 60 } # perform the unload
    G1 E-50 F{ 5 * 60 }   # finish the unload
    RESTORE_GCODE_STATE NAME=UNLOAD_state
  {% endif %}
 
[gcode_macro PURGE]
description: Extrudes filament, used to clean out previous filament
gcode:
  {% if printer.extruder.temperature < 180 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
  {% set PURGE_AMOUNT = params.PURGE_AMOUNT|default(40)|float %}
    SAVE_GCODE_STATE NAME=PURGE_state
    G91                   # relative coords
    G1 E{PURGE_AMOUNT} F{ 5 * 60 }  # purge
    RESTORE_GCODE_STATE NAME=PURGE_state
  {% endif %}
 
[gcode_macro LOAD_FILAMENT]
description: Loads filament into the extruder
gcode:
  {% if printer.extruder.temperature < 180 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=LOAD_state
    G91                   # Relative coords
    G1 E50 F{ 5 * 60 }  # extrude
    G4 P{ 0.9 * 1000 }    # dwell (ms)
    G1 E25.0 F{ 5 * 60 }  # extrude a little more
    _ENABLE_FS
    RESTORE_GCODE_STATE NAME=LOAD_state
  {% endif %}


[gcode_macro PID_EXTRUDER]
description: PID Tune for the Extruder
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %} 
  PID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}
  TURN_OFF_HEATERS
  SAVE_CONFIG
 
[gcode_macro PID_BED]
description: PID Tune for the Bed
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %} 
  PID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}
  TURN_OFF_HEATERS
  SAVE_CONFIG


######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(260)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state


[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 260.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 260.0   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 1.0   ; the value to retract while PAUSE
variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
variable_speed_retract    : 35.0  ; retract speed in mm/s
variable_unretract        : 1.0   ; the value to unretract while RESUME
variable_speed_unretract  : 35.0  ; unretract speed in mm/s
variable_speed_hop        : 15.0  ; z move speed in mm/s
variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : False ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
variable_runout_sensor    : ""    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
##                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
## !!! Custom macros, please use with care and review the section of the corresponding macro.
## These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
## Only  single line commands are supported, please create a macro if you need more than one command.
variable_user_pause_macro : ""    ; Everything inside the "" will be executed after the klipper base pause (PAUSE_BASE) function
variable_user_resume_macro: ""    ; Everything inside the "" will be executed before the klipper base resume (RESUME_BASE) function
variable_user_cancel_macro: ""    ; Everything inside the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
gcode:

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 2.250
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.002500, -0.078750, -0.170000, -0.247500, -0.340000, -0.418750
#*# 	-0.162500, -0.161250, -0.172500, -0.195000, -0.210000, -0.235000
#*# 	0.132500, 0.058750, -0.033750, -0.133750, -0.191250, -0.292500
#*# 	0.201250, 0.130000, 0.046250, -0.073750, -0.160000, -0.247500
#*# 	0.197500, 0.141250, 0.050000, -0.046250, -0.143750, -0.202500
#*# 	0.001250, -0.080000, -0.016250, -0.110000, -0.196250, -0.282500
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 20.000000000000007
#*# max_x = 251.99999999999997
#*# min_y = 20.0
#*# max_y = 270.0
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 22.080
#*# pid_ki = 1.187
#*# pid_kd = 102.673
